# intall
1. mysql > vars.yml
    mysql_proxy_id          
    mysql_proxy_static_id
            : 기존 설정이 10.0.161.100 으로 되어 있는데 
            mysql이 해당하는 zone(z4)에 맞게 proxy_ip를 설정해준다

    issue
    ```shell
       pxc/10d96cbd35bbc303ec7495a8dadd5b4f42ec46bbce24d107fadff0ec
                    L Error: Timed out pinging VM '7e7e3d16-294482a' after 600 seconds
            -> vars.yml 에 문제있는게 아니라면 serever가 느린 탓.                                         //221222
            -> 환경 설정에 문제가 있는 것이 아니라면 의심하지말고 서버탓을 해보자...ㅎ                  //221223
                Task 284 | 00:41:12 | Compiling packages: bootstrap/ab0e603ce6eef9358d99a2cc5c2f2f7138070a4666d81f6de5ca94d4dc4eb448
                Task 284 | 00:41:12 | Compiling packages: pxc-gra-log-purger/fe794a12761cd407ae0b1fdf388a9e9abd8d4d301cbdaa30409bb2b86331b9c2
                Task 284 | 00:49:24 | Compiling packages: proxy/27dcadba28147a73ded1e8fc4d149f3e484ad8efe0a9e24a43fcc99d3b5078b7 (00:08:12)
                Task 284 | 00:49:24 | Compiling packages: galera-agent/d3f45a40e8579ac45f7657b12df0f39f66ff7aa05fade6f822f797268aab84ea
                Task 284 | 00:50:13 | Compiling packages: bootstrap/ab0e603ce6eef9358d99a2cc5c2f2f7138070a4666d81f6de5ca94d4dc4eb448 (00:09:01)
                Task 284 | 00:50:13 | Compiling packages: socat/02ab993b995e1ad02146d6bc805c85c577ffa7239aede844e99f1b11bccf9008
                Task 284 | 00:50:20 | Compiling packages: galera-agent/d3f45a40e8579ac45f7657b12df0f39f66ff7aa05fade6f822f797268aab84ea (00:00:56)
                Task 284 | 00:50:20 | Compiling packages: migrate-to-pxc/4798da77e37416d16a0bb2c444ca0426382fbe85e09a22dcdb88194644c2b21f
                Task 284 | 00:50:47 | Compiling packages: openjdk/6a6af1fd7eebab1c4d975a14c1ef269faeb62c01dc45de66579af51f710c34de (00:09:35)
                Task 284 | 00:50:47 | Compiling packages: galera-init/a6a555ffbaea880412d2fd8e79e77b25a8f4295689292ef4d0870e898f6716a9
                Task 284 | 00:51:39 | Compiling packages: migrate-to-pxc/4798da77e37416d16a0bb2c444ca0426382fbe85e09a22dcdb88194644c2b21f (00:01:19)
                Task 284 | 00:51:39 | Compiling packages: auto-tune-mysql/8729219bf16ff2704064acb17536178313c50cee951776d453fa120cf0f1b726 (00:01:04)
                Task 284 | 00:54:41 | Compiling packages: pxc-gra-log-purger/fe794a12761cd407ae0b1fdf388a9e9abd8d4d301cbdaa30409bb2b86331b9c2 (00:13:29)
                Task 284 | 00:55:08 | Compiling packages: pxc-cluster-health-logger/3858573d6119fe7e20ce2ad3338010a2612592955372029a941d8f8df1e49c20 (00:13:56)
                Task 284 | 00:56:23 | Compiling packages: galera-init/a6a555ffbaea880412d2fd8e79e77b25a8f4295689292ef4d0870e898f6716a9 (00:05:36)
                Task 284 | 00:59:05 | Compiling packages: socat/02ab993b995e1ad02146d6bc805c85c577ffa7239aede844e99f1b11bccf9008 (00:08:52)
        ```
                오늘은 아주 잘됨

# delete
2) mysql 설치 
        - cf apps 삭제 방법
                + cf delete SAMPLE_APP_NAME
                        ```console
                        ubuntu@paasta-ta-bami-inception-1:~/workspace/service-deployment/paasta-service-samples/mysql$ cf delete mysql-sample-app
                        Really delete the app mysql-sample-app? [yN]: y
                        Deleting app mysql-sample-app in org system / space dev as admin...
                        Job (8f25e67a-c336-44f9-a1f3-1d3e163140cd) failed: Service broker failed to delete service binding for instance mysql-service-instance: Service broker error: ServiceInstance does not exist: id = 91c6fbcd-b7b9-4f61-bc58-bd8c52f95178
                        FAILED
                        ubuntu@paasta-ta-bami-inception-1:~/workspace/service-deployment/paasta-service-samples/mysql$ cf purge-service-instance mysql-service-instance
                        WARNING: This operation assumes that the service broker responsible for this service instance is no longer available or is not responding with a 200 or 410, and the service instance has been deleted, leaving orphan records in Cloud Foundry's database. All knowledge of the service instance will be removed from Cloud Foundry, including service bindings and service keys.
                        Really purge service instance mysql-service-instance from Cloud Foundry?> yes
                        Purging service mysql-service-instance...
                        OK
                        ```
        - cf delete-service SERVICE_NAME
        - cf delete-service-broke SERVICE_BROKER_NAME

# subnet 영역대 설정 잘하기

```c
Instance                                                    Process State  AZ  IPs            VM CID                                VM Type  Active  Stemcell  
mysql-broker/70e07aba-431f-41f3-be4e-1de0537c452b  running        z4  10.160.64.124  36ebbe52-81d3-46f0-987b-08d8aaf7c64c  small    true    bosh-openstack-kvm-ubuntu-bionic-go_agent/1.122  
mysql/20525c06-fd39-4881-b2a4-78dcbbf6d1c2         running        z4  10.160.64.122  55e75413-03ba-4542-bd26-f714c583ea7d  small    true    bosh-openstack-kvm-ubuntu-bionic-go_agent/1.122  
mysql/2f3f19ef-3ffb-4ca9-9eea-a12518d71f82         running        z4  10.160.64.121  9e5e9442-641b-4955-8774-7ef750b4d798  small    true    bosh-openstack-kvm-ubuntu-bionic-go_agent/1.122  
mysql/60f22f7c-da7e-40f7-bdb6-048c83e00392         running        z4  10.160.64.123  5a8fdafe-c688-4a62-a789-8b1e660b95c1  small    true    bosh-openstack-kvm-ubuntu-bionic-go_agent/1.122  
proxy/9c048509-b5f7-4a8a-8e99-7aaf5f8d8b7e         running        z5  10.160.65.100  21525633-4ced-40cc-88ee-cc4bfc3dfcb6  small    true    bosh-openstack-kvm-ubuntu-bionic-go_agent/1.122  

5 vms
```

- 기존에 mysql이 자꾸 오류가 났던 이유는 ip zone 설정의 문제였다. proxy ip는 z5에 / 나머지 instance는 z4에 배포한것이 문제였다.

# JDBC 주소 형태를 ip로 만들기 

- cf env APP_NAME
```c
System-Provided:
VCAP_SERVICES: {
  "Mysql-DB": [
    {
      "binding_guid": "8123811e-55ad-44cb-a1f3-7fdcc6cb3911",
      "binding_name": null,
      "credentials": {
        "hostname": "f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh",
        "name": "op_371435a8_ec81_4ab7_9661_7a47043d6d02",
        "password": "2b84d6727d3203b3",
        "port": "13307",
        "uri": "mysql://232355719a91aab3:2b84d6727d3203b3@f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh:13307/op_371435a8_ec81_4ab7_9661_7a47043d6d02",
        "username": "232355719a91aab3"
      },
      "instance_guid": "371435a8-ec81-4ab7-9661-7a47043d6d02",
      "instance_name": "mysql-service-instance",
      "label": "Mysql-DB",
      "name": "mysql-service-instance",
      "plan": "Mysql-Plan2-100con",
      "provider": null,
      "syslog_drain_url": null,
      "tags": [
        "mysql",
        "document"
      ],
      "volume_mounts": []
    }
  ]
}
```
- JDBC url =>  "uri": "mysql://232355719a91aab3:2b84d6727d3203b3@f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh:13307/op_371435a8_ec81_4ab7_9661_7a47043d6d02", 

1) bosh를 통해 배포된 service로 접근하는 하기 
        -  ` bosh -d mysql ssh mysql/0 `
2) 관리자 모드 실행
        - ` sudo su `
3) JDBC url을 사용하여 ping 
        - ` ping f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh `
        ```c
        PING f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh (10.160.64.100) 56(84) bytes of data
        64 bytes from f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh (10.160.64.100): icmp_seq=1 ttl=64 time=0.348 ms
        ```
        - 여기서 ip는 10.160.64.100 으로 mysql proxy ip임을 확인한다.
        - exit 후 외부 ip에서 ping을 명령했을 때 
        ```console
        ubuntu@paasta-ta-bami-inception-1:~/workspace/paasta-service-samples/mysql$ ping 2b84d6727d3203b3@f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh
        ping: 2b84d6727d3203b3@f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh: Name or service not known
        ```
        가 출력된다.

        -> 이는 bosh로 배포한 paasta의 app은 ssh 터널링을 통해 내부 접근이 가능 및 사용을 할 수 있다는 점을 알 수 있다.
        -> mysql clinent tool 접속시 우리는 이미 proxycap을 쓰고 있으므로 터널링이 아닌 tcp/ip로 접근해야하며, ip주소는 위에서 추출한 mysql proxy ip를 사용한다.

# mysql login
`  mysql -u 232355719a91aab3 -h 10.160.64.100 -p --port 13307 `

# mysql client tool 접속
```console
VCAP_SERVICES: {
  "Mysql-DB": [
    {
      "binding_guid": "8123811e-55ad-44cb-a1f3-7fdcc6cb3911",
      "binding_name": null,
      "credentials": {
        "hostname": "f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh",
        "name": "op_371435a8_ec81_4ab7_9661_7a47043d6d02",
        "password": "2b84d6727d3203b3",
        "port": "13307",
        "uri": "mysql://232355719a91aab3:2b84d6727d3203b3@f96e17f8-7fe7-467b-b2e8-c6ea071068b5.proxy.default.mysql.bosh:13307/op_371435a8_ec81_4ab7_9661_7a47043d6d02",
        "username": "232355719a91aab3"
      },
      "instance_guid": "371435a8-ec81-4ab7-9661-7a47043d6d02",
      "instance_name": "mysql-service-instance",
      "label": "Mysql-DB",
      "name": "mysql-service-instance",
      "plan": "Mysql-Plan2-100con",
      "provider": null,
      "syslog_drain_url": null,
      "tags": [
        "mysql",
        "document"
      ],
      "volume_mounts": []
    }
  ]
}
```
의 정보로 입력 

-체크사항
        1. mysql 에서 접속 로그인이 되는 이유는 ssh터널링을 했기 때문에 별도의 처리 없이 가능
        2. 그러나 클라이언트 툴을 이용시에는 proxycap설정으로 인해 TCP/IP를 이용하는데 mysql proxyip의 접근을 허용할 수 있는 rule을 추가해주어야 함 